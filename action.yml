name: "SurrealDB in Github Actions"
description: "Start a SurrealDB instance in Github Actions"

branding:
  icon: "database"
  color: "purple"

inputs:
  surrealdb_version:
    description: "The version of SurrealDB to use, default is latest"
    required: false
    default: "latest"
  surrealdb_port:
    description: "The port to run SurrealDB on, default is 8000"
    required: false
    default: "8000"
  surrealdb_username:
    description: "The username to use for SurrealDB"
    required: false
  surrealdb_password:
    description: "The password to use for SurrealDB"
    required: false
  surrealdb_auth:
    description: "Enable authentication for SurrealDB"
    required: false
    default: "false"
  surrealdb_strict:
    description: "Enable strict mode for SurrealDB"
    required: false
    default: "false"
  surrealdb_log:
    description: "Enable logs printed out in the console."
    required: false
  surrealdb_additional_args:
    description: "Additional arguments to pass to SurrealDB"
    required: false
  surrealdb_allow_all:
    description: "Allow all capabilities except for those more specifically denied"
    required: false
    default: "false"

runs:
  using: composite
  steps:

    - name: Set environment variables
      shell: bash
      run: |
        export SURREALDB_VERSION=${{ inputs.surrealdb_version }}
        export SURREALDB_PORT=${{ inputs.surrealdb_port }}
        export SURREALDB_USERNAME=${{ inputs.surrealdb_username }}
        export SURREALDB_PASSWORD=${{ inputs.surrealdb_password }}
        export SURREALDB_AUTH=${{ inputs.surrealdb_auth }}
        export SURREALDB_STRICT=${{ inputs.surrealdb_strict }}
        export SURREALDB_LOG=${{ inputs.surrealdb_log }}
        export SURREALDB_ADDITIONAL_ARGS=${{ inputs.surrealdb_additional_args }}
        export SURREALDB_ALLOW_ALL=${{ inputs.surrealdb_allow_all }}

    - name: Install SurrealDB
      shell: bash
      run: |
        # Download the SurrealDB binary when the version is not latest
        if [ "$SURREALDB_VERSION" != "latest" ]; then
          curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh -s
        else
          curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh -s -- --version ${{ inputs.surrealdb_version }}
        fi

    - name: Run SurrealDB in Background
      shell: bash
      run: |

        if [ -z "$SURREALDB_USERNAME" ]; then
          SURREALDB_USERNAME="-u root"
        else
          SURREALDB_USERNAME="-u $SURREALDB_USERNAME"
        fi

        if [ "$SURREALDB_PASSWORD" ]; then
          SURREALDB_PASSWORD="-p $SURREALDB_PASSWORD"
        fi

        if [[ "$SURREALDB_VERSION" == v1.* ]]; then
          if [ "$SURREALDB_AUTH" == "true" ]; then
            SURREALDB_AUTH="--auth"
          fi
        fi

        if [[ -z "$SURREALDB_PORT" ]]; then
          SURREALDB_PORT="--bind 0.0.0.0:8000"
        else
          SURREALDB_PORT="--bind 0.0.0.0:$SURREALDB_PORT"
        fi

        if [ "$SURREALDB_STRICT" == "true" ]; then
          SURREALDB_STRICT="--strict"
        fi

        if [ -z "$SURREALDB_LOG" ]; then
          SURREALDB_LOG="--log trace"
        else
          SURREALDB_LOG="--log $SURREALDB_LOG"
        fi

        if [ -z "$SURREALDB_ADDITIONAL_ARGS" ]; then
          SURREALDB_ADDITIONAL_ARGS=""
        fi

        if [ "$SURREALDB_ALLOW_ALL" == "true" ]; then
          SURREALDB_ALLOW_ALL="--allow-all"
        fi

        cd /usr/local/bin
        
        nohup surreal start \
          $SURREALDB_USERNAME \
          $SURREALDB_PASSWORD \
          $SURREALDB_AUTH \
          $SURREALDB_PORT \
          $SURREALDB_STRICT \
          $SURREALDB_LOG \
          $SURREALDB_ADDITIONAL_ARGS \
          $SURREALDB_ALLOW_ALL &

        echo nohup surreal start \
          $SURREALDB_USERNAME \
          $SURREALDB_PASSWORD \
          $SURREALDB_AUTH \
          $SURREALDB_PORT \
          $SURREALDB_STRICT \
          $SURREALDB_LOG \
          $SURREALDB_ADDITIONAL_ARGS \
          $SURREALDB_ALLOW_ALL &
        
    - name: Wait for SurrealDB to start
      shell: bash
      run: |
        URL="http://localhost:8000/health"
        MAX_ATTEMPTS=30
        ATTEMPT=0

        while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $URL)
            
            if [ "$RESPONSE" -eq 200 ]; then
                echo "SurrealDB instance is up and running, continuing..."
                break
            fi
            
            ATTEMPT=$((ATTEMPT + 1))
            sleep 1
        done

        if [ "$ATTEMPT" -ge "$MAX_ATTEMPTS" ]; then
            echo "SurrealDB instance could not be contacted, aborting."
            exit 1
        fi